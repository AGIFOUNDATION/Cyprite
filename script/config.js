let PageName="ConfigPage";var currentTabId=0;ActionCenter.saveConfig=async(e,o)=>{myInfo.name=o.name||myInfo.name,myInfo.info=o.info||"",myInfo.lang=o.lang,myInfo.lang&&(myInfo.lang=myInfo.lang.toLowerCase(),i18nList.includes(myInfo.lang))||(myInfo.lang=DefaultLang),myInfo.apiKey=o.apiKey||{},myInfo.useLocalKV=!ForceBackend&&!o.wsHost;var n={name:myInfo.name,info:myInfo.info,lang:myInfo.lang},n=(await Promise.all([chrome.storage.local.set({apiKey:myInfo.apiKey}),chrome.storage.sync.set(n)]),document.querySelector("html").setAttribute("lang",myInfo.lang),I18NMessages[myInfo.lang]||I18NMessages[DefaultLang]);document.title=n.configPage.configurationTitle,Notification.show(n.cypriteName,n.configPage.configurationSaved,"rightBottom","success",3e3),sendMessage("SetConfig",o),renderI18N("configPage")},ActionCenter.goBack=()=>{location.href="./newtab.html"},ActionCenter.goWebSite=async()=>{sendMessage("gotoWebSite")},EventHandler.getWebSiteURLFailed=e=>{e.ok||(e=I18NMessages[myInfo.lang]||I18NMessages[DefaultLang],Notification.show(e.cypriteName,e.configPage.connectFailed,"rightBottom","fail",3e3))},EventHandler.connectWSHost=async e=>{var o=I18NMessages[myInfo.lang]||I18NMessages[DefaultLang];e&&e.ok?(await chrome.storage.local.set({wsHost:e.wsHost}),e.wsHost?(console.log("[WS] Connect Knowledge Vault: "+e.wsHost),Notification.show(o.cypriteName,o.configPage.wsConnected,"rightBottom","success",3e3)):(console.log("[WS] Use Edged Knowledge Vault."),Notification.show(o.cypriteName,o.configPage.useEdgedVault,"rightBottom","warn",5e3))):Notification.show(o.cypriteName,o.configPage.wsConnectFailed,"rightBottom","fail",5e3)};let init=async()=>{var[e]=await Promise.all([chrome.tabs.getCurrent(),getConfig()]),o=I18NMessages[myInfo.lang]||I18NMessages.en,[e,o]=(currentTabId=e.id,ForceBackend&&[...document.body.querySelectorAll('[caseGroup="forceServer"]')].forEach(e=>{e.style.display="none"}),renderI18N("configPage"),document.querySelector("html").setAttribute("lang",myInfo.lang),document.title=o.configPage.configurationTitle,setGroupSwitcher(),registerAction(),await Promise.all([chrome.storage.local.get(["wsHost","apiKey"]),chrome.storage.sync.get(["name","info","lang"])])),o={name:o.name||"",lang:o.lang||DefaultLang,info:o.info||"",wsHost:e.wsHost||"",apiKey:e.apiKey};o.apiKey&&isString(o.apiKey)&&(o.apiKey={},o.apiKey.gemini=e.apiKey),setDataGroup("configuration",o),changeTab("groupPersonel")};window.onload=init;